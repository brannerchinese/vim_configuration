source /Users/dpb/bitbucket_public/vim_configuration/autoload/pathogen.vim
execute pathogen#infect()
" call pathogen#runtime_append_all_bundles()

"""""""""""""""""""""""""""""""
""""""" GENERAL MATTER """"""""
"""""""""""""""""""""""""""""""


" This line should not be removed as it ensures that various options are
" " properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Vim5 and later versions support syntax highlighting. Uncommenting the
" " following enables syntax highlighting by default.
if has("syntax")
  syntax on
  endif

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>


" REQUIRED. This makes vim invoke Latex-Suite when you open a tex file.
filetype plugin on

" IMPORTANT: win32 users will need to have 'shellslash' set so that latex
" can be called correctly.
set shellslash

" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a singe file. This will confuse Latex-Suite. Set your grep
" program to always generate a file-name.
set grepprg=grep\ -nH\ $*


" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'


" Only do this part when compiled with support for autocommands.
if has("autocmd")
  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on


  " Uncomment the following to have Vim jump to the last position when
  " " reopening a file
  " if has("autocmd")
  "  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
  " endif

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif
  augroup END

else
  set autoindent                " always set autoindenting on

endif " has("autocmd")



" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
                  \ | wincmd p | diffthis
endif



" These will highlight the location of the cursor in two dimensions:
" (20120109)
:set cursorcolumn
:hi CursorColumn cterm=NONE ctermbg=darkgrey ctermfg=white
:set cursorline
":hi CursorLine cterm=NONE ctermbg=darkgrey " ctermfg=white


" Indentation for php and html (20120111)
" This will affect Ctrl-T and 'autoindent'.
au BufRead,BufNewFile *.php,*.phtml,*.php4,*.php3,*.php5,*.phps set shiftwidth=4
au BufRead,BufNewFile *.php,*.phtml,*.php4,*.php3,*.php5,*.phps set expandtab
au BufRead,BufNewFile *.html set shiftwidth=2
au BufRead,BufNewFile *.html set expandtab
au BufRead,BufNewFile *.html set smartindent
:let g:html_indent_inctags = "body,head,tbody"


" For Alpine files (saved to /tmp/pico.01101 etc.), disable auto line-wrap
" from
" http://www.salixos.org/forum/viewtopic.php?f=32&t=2705&sid=dec655c054a78e667793a61c3493dc1a#p17240
" (accessed 20121229)
au BufRead,BufNewFile pico.* set wrap linebreak textwidth=0 showbreak=+


" show matching brackets for short time
:set matchtime=2


" Pathogen
" from https://github.com/tpope/vim-pathogen (20120702)
" any plugins you wish to install can be extracted to a subdirectory under
" ~/.vim/bundle, and they will be added to the 'runtimepath'.
"call pathogen#infect()



" for spell-check with Vim's native spell-checker
" from http://vimdoc.sourceforge.net/htmldoc/spell.html
:setlocal spell spelllang=en_us
" underline misspellings, rather than coloring them
hi clear SpellBad
hi SpellBad term=bold,underline cterm=bold,underline
hi clear SpellCap
hi SpellCap term=reverse,underline cterm=reverse,underline
hi clear SpellRare
hi SpellRare term=bold,reverse cterm=bold,reverse
hi clear SpellLocal
hi SpellLocal term=underline cterm=underline
" This is in the same directory as the current vimrc_extras file
if filereadable("/home/dpb/develop/vim_configuration/spellfile.add")
    set spellfile=~/develop/vim_configuration/spellfile.add
  elseif filereadable("/Users/dpb11/develop/vim_configuration/spellfile.add")
    set spellfile=/Users/dpb11/develop/vim_configuration/spellfile.add
endif


" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  "set hlsearch
  " but escape to turn off highlighting
  "nnoremap <esc> :noh<return><esc>
  "nnoremap <esc> :noh<return>
endif

"""""""""""""""""""""""""""""""
""""""""" END GENERAL """""""""
"""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""
""""""""" FOR PYTHON """"""""""
"""""""""""""""""""""""""""""""
" Source the suggested vimrc from python.org: (added 20120109)
" Note that /home/dpb is used on Ubuntu and /Users/dpb on OS X

" The following core matter was taken from
"  http://svn.python.org/projects/python/trunk/Misc/Vim/vimrc
"  on 20120109:

" vimrc file for following the coding standards specified in PEP 7 & 8.
"
" To use this file, source it in your own personal .vimrc file (``source
" <filename>``) or, if you don't have a .vimrc file, you can just symlink to it
" (``ln -s <this file> ~/.vimrc``).  All options are protected by autocmds
" (read below for an explanation of the command) so blind sourcing of this file
" is safe and will not affect your settings for non-Python or non-C files.
"
"
" All setting are protected by 'au' ('autocmd') statements.  Only files ending
" in .py or .pyw will trigger the Python settings while files ending in *.c or
" *.h will trigger the C settings.  This makes the file "safe" in terms of only
" adjusting settings for Python and C files.
"
" Only basic settings needed to enforce the style guidelines are set.
" Some suggested options are listed but commented out at the end of this file.

" Number of spaces that a pre-existing tab is equal to.
" For the amount of space used for a new tab use shiftwidth.
au BufRead,BufNewFile *py,*pyw,*.c,*.h set tabstop=8

" What to use for an indent.
" This will affect Ctrl-T and 'autoindent'.
" Python: 4 spaces
" C: tabs (pre-existing files) or 4 spaces (new files)
au BufRead,BufNewFile *.py,*.pyw set shiftwidth=4
au BufRead,BufNewFile *.py,*.pyw,*.js,*.css set expandtab
fu Select_c_style()
    if search('^\t', 'n', 150)
        set shiftwidth=8
        set noexpandtab
    el
        set shiftwidth=4
        set expandtab
    en
endf
au BufRead,BufNewFile *.c,*.h call Select_c_style()
au BufRead,BufNewFile Makefile* set noexpandtab
au BufRead,BufNewFile *.js,*.css set shiftwidth=2

" Use the below highlight group when displaying bad whitespace is desired.
highlight BadWhitespace ctermbg=red guibg=red

" Display tabs at the beginning of a line in Python mode as bad.
au BufRead,BufNewFile *.py,*.pyw match BadWhitespace /^\t\+/
" Make trailing whitespace be flagged as bad.
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" Wrap text after a certain number of characters
" Python: 79
" C: 79
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h,*.js,*.css set textwidth=79
" "pico" files for Alpine (DPB 20120711)
"au BufRead,BufNewFile pico.* set textwidth=79

" Turn off settings in 'formatoptions' relating to comment formatting.
" - c : do not automatically insert the comment leader when wrapping based on
"    'textwidth'
" - o : do not insert the comment leader when using 'o' or 'O' from command mode
" - r : do not insert the comment leader when hitting <Enter> in insert mode
" Python: not needed
" C: prevents insertion of '*' at the beginning of every line in a comment
au BufRead,BufNewFile *.c,*.h set formatoptions-=c formatoptions-=o formatoptions-=r

" Use UNIX (\n) line endings.
" Only used for new files so as to not force existing files to change their
" line endings.
" Python: yes
" C: yes
au BufNewFile *.py,*.pyw,*.c,*.h set fileformat=unix


" ----------------------------------------------------------------------------
" The following section contains suggested settings.  While in no way required
" to meet coding standards, they are helpful.

" Set the default file encoding to UTF-8: ``set encoding=utf-8``

" Puts a marker at the beginning of the file to differentiate between UTF and
" UCS encoding (WARNING: can trick shells into thinking a text file is actually
" a binary file when executing the text file): ``set bomb``

" For full syntax highlighting:
"``let python_highlight_all=1``
"``syntax on``

" Automatically indent based on file type: ``filetype indent on``
" Keep indentation level from previous line: ``set autoindent``

" Folding based on indentation: ``set foldmethod=indent``

"""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""
" Below are DPB's other additions "
"""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""

" Basic folding on indent
:set foldmethod=indent

"""""""""""""""""""""""""""""""
""""""" END FOR PYTHON """"""""
"""""""""""""""""""""""""""""""

" 20130608: for MacVim; also improves appearance in the OS X Terminal
set background=dark

" For vim-javascript
let javascript_enable_domhtmlcss=1
let b:javascript_fold=1
